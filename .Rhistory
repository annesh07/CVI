# library(ggplot2)
# ggplot(M00, aes(x = V1, y = V6)) +
#   geom_col(fill = "blue") +
#   geom_text(aes(label = round(V6,3), y = round(V6,3) + 0.01), vjust = -0.5) +
#   theme_bw() +
#   labs(title = "Average time to run one iteration for different N",
#        x = "N", y = "Time (in minutes)")
#
# ggplot(M00, aes(x=V1)) + geom_point(aes(y = V2, color = "blue"), shape = 16, size = 3) +
#   geom_point(aes(y = V3, color = "red"), shape = 16, size = 3) +
#   scale_color_manual(values = c("blue", "red"), labels = c("Posterior alpha",
#        "Posterior z_n's")) +
#   theme_bw() +
#   labs(title = "Expected clusters from posterior distribution of different variables",
#        x = "N", y = "# Clusters")
# Data0 <- matrix(c(a,cl), nrow=100, ncol=2)
# Data0 <- as.data.frame(Data0)
# Data0$V2 <- as.factor(Data0$V2)
# tab <- table(Data0$V2)
# get_box_stats <- function(y, upper_limit = max(Data0$V1) * 1.15) {
#   return(data.frame(
#     y = 0.95 * upper_limit,
#     label = paste(
#       "Count =", length(y), "\n",
#       "Mean =", round(mean(y), 1)
#     )
#   ))
# }
# library(ggplot2)
# ggplot(Data0, aes(x=V2, y=V1)) + geom_boxplot() +
#   stat_summary(fun.data = get_box_stats, geom = "text", hjust = 0.5,
#   vjust = 0.9) + labs(
#     title = "Relationship between cluster count by 2 different variables",
#     subtitle = "N = 100, number of clusters present in the sample = 4",
#     x = "# clusters from posterior cluster allocation probabilities",
#     y = "# clusters from posterior alpha"
#   )
})
P230 <- L21 %*% t(X)
library(CVI)
library(CVI)
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D0 <- 1000
alpha0 <- rep(NA, 10)
cl <- rep(NA, 10)
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
for (k in 1:1){
set.seed(12072024)
D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[k]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
alpha0[k] <- Results$posterior$alpha
cl[k] <- Results$posterior$Clusters
c1[[k]] <- Results$posterior$Proportions
t[k] <- t1 - t0
}
a1 <- alpha0*log(1+N/alpha0)
#m <- c(17, 137, 51, 84, 307, 425, 187, 928, 933, 106)
# M00 <- matrix(c(N0, a0, a, cl, t, m, t/m), nrow=10)
# M00 <- as.data.frame(M00)
# M00$V1 <- as.factor(M00$V1)
# library(ggplot2)
# ggplot(M00, aes(x = V1, y = V6)) +
#   geom_col(fill = "blue") +
#   geom_text(aes(label = round(V6,3), y = round(V6,3) + 0.01), vjust = -0.5) +
#   theme_bw() +
#   labs(title = "Average time to run one iteration for different N",
#        x = "N", y = "Time (in minutes)")
#
# ggplot(M00, aes(x=V1)) + geom_point(aes(y = V2, color = "blue"), shape = 16, size = 3) +
#   geom_point(aes(y = V3, color = "red"), shape = 16, size = 3) +
#   scale_color_manual(values = c("blue", "red"), labels = c("Posterior alpha",
#        "Posterior z_n's")) +
#   theme_bw() +
#   labs(title = "Expected clusters from posterior distribution of different variables",
#        x = "N", y = "# Clusters")
# Data0 <- matrix(c(a,cl), nrow=100, ncol=2)
# Data0 <- as.data.frame(Data0)
# Data0$V2 <- as.factor(Data0$V2)
# tab <- table(Data0$V2)
# get_box_stats <- function(y, upper_limit = max(Data0$V1) * 1.15) {
#   return(data.frame(
#     y = 0.95 * upper_limit,
#     label = paste(
#       "Count =", length(y), "\n",
#       "Mean =", round(mean(y), 1)
#     )
#   ))
# }
# library(ggplot2)
# ggplot(Data0, aes(x=V2, y=V1)) + geom_boxplot() +
#   stat_summary(fun.data = get_box_stats, geom = "text", hjust = 0.5,
#   vjust = 0.9) + labs(
#     title = "Relationship between cluster count by 2 different variables",
#     subtitle = "N = 100, number of clusters present in the sample = 4",
#     x = "# clusters from posterior cluster allocation probabilities",
#     y = "# clusters from posterior alpha"
#   )
library(CVI)
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D0 <- 1000
alpha0 <- rep(NA, 10)
cl <- rep(NA, 10)
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
for (k in 1:1){
set.seed(12072024)
D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[k]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
alpha0[k] <- Results$posterior$alpha
cl[k] <- Results$posterior$Clusters
c1[[k]] <- Results$posterior$Proportions
t[k] <- t1 - t0
}
a1 <- alpha0*log(1+N/alpha0)
#m <- c(17, 137, 51, 84, 307, 425, 187, 928, 933, 106)
# M00 <- matrix(c(N0, a0, a, cl, t, m, t/m), nrow=10)
# M00 <- as.data.frame(M00)
# M00$V1 <- as.factor(M00$V1)
# library(ggplot2)
# ggplot(M00, aes(x = V1, y = V6)) +
#   geom_col(fill = "blue") +
#   geom_text(aes(label = round(V6,3), y = round(V6,3) + 0.01), vjust = -0.5) +
#   theme_bw() +
#   labs(title = "Average time to run one iteration for different N",
#        x = "N", y = "Time (in minutes)")
#
# ggplot(M00, aes(x=V1)) + geom_point(aes(y = V2, color = "blue"), shape = 16, size = 3) +
#   geom_point(aes(y = V3, color = "red"), shape = 16, size = 3) +
#   scale_color_manual(values = c("blue", "red"), labels = c("Posterior alpha",
#        "Posterior z_n's")) +
#   theme_bw() +
#   labs(title = "Expected clusters from posterior distribution of different variables",
#        x = "N", y = "# Clusters")
# Data0 <- matrix(c(a,cl), nrow=100, ncol=2)
# Data0 <- as.data.frame(Data0)
# Data0$V2 <- as.factor(Data0$V2)
# tab <- table(Data0$V2)
# get_box_stats <- function(y, upper_limit = max(Data0$V1) * 1.15) {
#   return(data.frame(
#     y = 0.95 * upper_limit,
#     label = paste(
#       "Count =", length(y), "\n",
#       "Mean =", round(mean(y), 1)
#     )
#   ))
# }
# library(ggplot2)
# ggplot(Data0, aes(x=V2, y=V1)) + geom_boxplot() +
#   stat_summary(fun.data = get_box_stats, geom = "text", hjust = 0.5,
#   vjust = 0.9) + labs(
#     title = "Relationship between cluster count by 2 different variables",
#     subtitle = "N = 100, number of clusters present in the sample = 4",
#     x = "# clusters from posterior cluster allocation probabilities",
#     y = "# clusters from posterior alpha"
#   )
P230[,n]
L21 <- sweep(L1, 1, L2, "/")
P230 <- L21 %*% t(X)
n
P230[,n]
P231 <- rep(NA, T0)
for (i in 1:T0){
P231[i] = -0.5*(L21[i,, drop=FALSE]) %*% t(L21[i,, drop=FALSE])
}
P231
P232 <- -0.5*D/L2
P232
P230 + P231 + P232
P230 + P231 + t(P232)
dim(P230)
P230[,n]+P231+P232
P0 <- exp(Plog)
P1 <- P0[-n,]
p_eni <- colSums(P1)
p_vni <- colSums(P1*(1-P1))
p_enj <- rowSums(apply(P1, 1, f0))
P21 <- log((W1/W2) + p_enj) - (p_vnj + (W1/(W2^2)))/(((W1/W2) + p_enj)^2) -
log(1 + p_eni + p_enj + (W1/W2)) +
(p_vni + p_vnj + (W1/(W2^2)))/((1 + p_eni + p_enj + (W1/W2))^2)
library(CVI)
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D0 <- 1000
alpha0 <- rep(NA, 10)
cl <- rep(NA, 10)
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
for (k in 1:1){
set.seed(12072024)
D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[k]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
alpha0[k] <- Results$posterior$alpha
cl[k] <- Results$posterior$Clusters
c1[[k]] <- Results$posterior$Proportions
t[k] <- t1 - t0
}
a1 <- alpha0*log(1+N/alpha0)
#m <- c(17, 137, 51, 84, 307, 425, 187, 928, 933, 106)
# M00 <- matrix(c(N0, a0, a, cl, t, m, t/m), nrow=10)
# M00 <- as.data.frame(M00)
# M00$V1 <- as.factor(M00$V1)
# library(ggplot2)
# ggplot(M00, aes(x = V1, y = V6)) +
#   geom_col(fill = "blue") +
#   geom_text(aes(label = round(V6,3), y = round(V6,3) + 0.01), vjust = -0.5) +
#   theme_bw() +
#   labs(title = "Average time to run one iteration for different N",
#        x = "N", y = "Time (in minutes)")
#
# ggplot(M00, aes(x=V1)) + geom_point(aes(y = V2, color = "blue"), shape = 16, size = 3) +
#   geom_point(aes(y = V3, color = "red"), shape = 16, size = 3) +
#   scale_color_manual(values = c("blue", "red"), labels = c("Posterior alpha",
#        "Posterior z_n's")) +
#   theme_bw() +
#   labs(title = "Expected clusters from posterior distribution of different variables",
#        x = "N", y = "# Clusters")
# Data0 <- matrix(c(a,cl), nrow=100, ncol=2)
# Data0 <- as.data.frame(Data0)
# Data0$V2 <- as.factor(Data0$V2)
# tab <- table(Data0$V2)
# get_box_stats <- function(y, upper_limit = max(Data0$V1) * 1.15) {
#   return(data.frame(
#     y = 0.95 * upper_limit,
#     label = paste(
#       "Count =", length(y), "\n",
#       "Mean =", round(mean(y), 1)
#     )
#   ))
# }
# library(ggplot2)
# ggplot(Data0, aes(x=V2, y=V1)) + geom_boxplot() +
#   stat_summary(fun.data = get_box_stats, geom = "text", hjust = 0.5,
#   vjust = 0.9) + labs(
#     title = "Relationship between cluster count by 2 different variables",
#     subtitle = "N = 100, number of clusters present in the sample = 4",
#     x = "# clusters from posterior cluster allocation probabilities",
#     y = "# clusters from posterior alpha"
#   )
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D <- 1000
alpha0 <- c()
cl <- c()
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
set.seed(12072024)
#D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[1]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
alpha0[k] <- Results$posterior$alpha
cl[1] <- Results$posterior$Clusters
c1[[1]] <- Results$posterior$Proportions
t[1] <- t1 - t0
CV1(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
library(CVI)
CV1(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
library(CVI)
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D <- 1000
alpha0 <- c()
cl <- c()
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
set.seed(12072024)
#D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[1]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
alpha0[k] <- Results$posterior$alpha
cl[1] <- Results$posterior$Clusters
c1[[1]] <- Results$posterior$Proportions
t[1] <- t1 - t0
Pf0
library(CVI)
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D <- 1000
alpha0 <- c()
cl <- c()
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
set.seed(12072024)
#D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[1]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
alpha0[k] <- Results$posterior$alpha
cl[1] <- Results$posterior$Clusters
c1[[1]] <- Results$posterior$Proportions
t[1] <- t1 - t0
library(CVI)
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D <- 10
alpha0 <- c()
cl <- c()
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
set.seed(12072024)
#D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[1]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
library(CVI)
