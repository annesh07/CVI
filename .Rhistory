#   return(data.frame(
#     y = 0.95 * upper_limit,
#     label = paste(
#       "Count =", length(y), "\n",
#       "Mean =", round(mean(y), 1)
#     )
#   ))
# }
# library(ggplot2)
# ggplot(Data0, aes(x=V2, y=V1)) + geom_boxplot() +
#   stat_summary(fun.data = get_box_stats, geom = "text", hjust = 0.5,
#   vjust = 0.9) + labs(
#     title = "Relationship between cluster count by 2 different variables",
#     subtitle = "N = 100, number of clusters present in the sample = 4",
#     x = "# clusters from posterior cluster allocation probabilities",
#     y = "# clusters from posterior alpha"
#   )
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D <- 1000
alpha0 <- c()
cl <- c()
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
set.seed(12072024)
#D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[1]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
alpha0[k] <- Results$posterior$alpha
cl[1] <- Results$posterior$Clusters
c1[[1]] <- Results$posterior$Proportions
t[1] <- t1 - t0
CV1(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
library(CVI)
CV1(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
library(CVI)
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D <- 1000
alpha0 <- c()
cl <- c()
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
set.seed(12072024)
#D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[1]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
alpha0[k] <- Results$posterior$alpha
cl[1] <- Results$posterior$Clusters
c1[[1]] <- Results$posterior$Proportions
t[1] <- t1 - t0
Pf0
library(CVI)
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D <- 1000
alpha0 <- c()
cl <- c()
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
set.seed(12072024)
#D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[1]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
alpha0[k] <- Results$posterior$alpha
cl[1] <- Results$posterior$Clusters
c1[[1]] <- Results$posterior$Proportions
t[1] <- t1 - t0
library(CVI)
library("CVI")
#N0 <- seq(100, 1000, 100)
#A <- c(0.00000000000000000000000000001, 0.0000001, 0.00001, 0.001, 0.1, 1, 10, 50, 100, 1000)
D <- 10
alpha0 <- c()
cl <- c()
c1 <- list()
c0 <- list()
t <- rep(NA, 10)
set.seed(12072024)
#D <- D0[k]
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[1]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
# X[,1] <- X1
# X[,2] <- X2
for (i in 1:D){
X[,i] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.01
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, 1000)
t1 <- Sys.time()
library(CVI)
library(CVI)
set.seed(12072024)
D <- 50
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
clust0 <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
for (d in 1:D){
X[, d] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.001
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
maxit <- 1000
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, maxit)
t1 <- Sys.time()
alpha0 <- Results$posterior$alpha
cl <- Results$posterior$Clusters
alpha0
set.seed(12072024)
D <- 2
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
clust0 <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
for (d in 1:D){
X[, d] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.001
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
maxit <- 1000
t0 <- Sys.time()
Results <- CVI(N, D, T0, s1, s2, L20, X, W1, W2, L1, L2, Plog, maxit)
t1 <- Sys.time()
alpha0 <- Results$posterior$alpha
cl <- Results$posterior$Clusters
set.seed(12072024)
D <- 2
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
clust0 <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
for (d in 1:D){
X[, d] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.001
b1 <- 0.001
b2 <- 0.001
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
G1 <- 0.0001
G2 <- 0.0001
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
maxit <- 1000
t0 <- Sys.time()
Results <- CVI_sigma(N, D, T0, s1, s2, L20, b1, b2, X, W1, W2, L1,
L2, G1, G2, Plog, maxit)
t1 <- Sys.time()
alpha0 <- Results$posterior$alpha
cl <- Results$posterior$Clusters
sig <- Results$posterior$sigma^2
sig
alpha0
N0 <- seq(100, 1000, 100)
alpha0 <- rep(NA, 10)
cl <- rep(NA, 10)
c0 <- list()
c1 <- list()
t <- rep(NA, 10)
sig <- rep(NA, 10)
for (k in 1:10){
set.seed(12072024)
D <- 2
N <- 100
C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[k]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
for (d in 1:D){
X[, d] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.001
b1 <- 0.001
b2 <- 0.001
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
G1 <- 0.0001
G2 <- 0.0001
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
maxit <- 1000
t0 <- Sys.time()
Results <- CVI_sigma(N, D, T0, s1, s2, L20, b1, b2, X, W1, W2, L1,
L2, G1, G2, Plog, maxit)
t1 <- Sys.time()
t[k] <- t1 - t0
alpha0[k] <- Results$posterior$alpha
cl[k] <- Results$posterior$Clusters
c1[[k]] <- Results$posterior$Proportions
sig[k] <- Results$posterior$sigma^2
}
N0
N0 <- seq(100, 1000, 100)
alpha0 <- rep(NA, 10)
cl <- rep(NA, 10)
c0 <- list()
c1 <- list()
t <- rep(NA, 10)
sig <- rep(NA, 10)
for (k in 1:10){
set.seed(12072024)
D <- 2
N <- N0[K]
#C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[k]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
for (d in 1:D){
X[, d] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.001
b1 <- 0.001
b2 <- 0.001
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
G1 <- 0.0001
G2 <- 0.0001
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
maxit <- 1000
t0 <- Sys.time()
Results <- CVI_sigma(N, D, T0, s1, s2, L20, b1, b2, X, W1, W2, L1,
L2, G1, G2, Plog, maxit)
t1 <- Sys.time()
t[k] <- t1 - t0
alpha0[k] <- Results$posterior$alpha
cl[k] <- Results$posterior$Clusters
c1[[k]] <- Results$posterior$Proportions
sig[k] <- Results$posterior$sigma^2
}
N0 <- seq(100, 1000, 100)
alpha0 <- rep(NA, 10)
cl <- rep(NA, 10)
c0 <- list()
c1 <- list()
t <- rep(NA, 10)
sig <- rep(NA, 10)
for (k in 1:10){
set.seed(12072024)
D <- 2
N <- N0[k]
#C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[k]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
for (d in 1:D){
X[, d] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.001
b1 <- 0.001
b2 <- 0.001
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
G1 <- 0.0001
G2 <- 0.0001
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
maxit <- 1000
t0 <- Sys.time()
Results <- CVI_sigma(N, D, T0, s1, s2, L20, b1, b2, X, W1, W2, L1,
L2, G1, G2, Plog, maxit)
t1 <- Sys.time()
t[k] <- t1 - t0
alpha0[k] <- Results$posterior$alpha
cl[k] <- Results$posterior$Clusters
c1[[k]] <- Results$posterior$Proportions
sig[k] <- Results$posterior$sigma^2
}
alpha0
sig
t
alpha0*log(1+N0/alpha0)
cl
1/sig
1/0.9
library(CVI)
N0 <- seq(100, 1000, 100)
alpha0 <- rep(NA, 10)
cl <- rep(NA, 10)
c0 <- list()
c1 <- list()
t <- rep(NA, 10)
sig <- rep(NA, 10)
for (k in 1:10){
set.seed(12072024)
D <- 2
N <- N0[k]
#C0 <- diag(D)
T0 <- 20
latent_allocation <- rbinom(N, 1, 0.5)
c0[[k]] <- table(latent_allocation)
# X1 <- rnorm(N) + latent_allocation*7
# X2 <- rnorm(N) + latent_allocation*7
X <- matrix(0, nrow=N, ncol=D)
for (d in 1:D){
X[, d] <- rnorm(N) + latent_allocation*7
}
s1 <- 0.001
s2 <- 0.001
b1 <- 0.001
b2 <- 0.001
L20 <- 0.01
W1 <- 0.0001
W2 <- 0.0001
L1 <- matrix(0.0001, nrow = T0, ncol = D)
L2 <- matrix(0.0001, nrow = T0, ncol = 1)
G1 <- 0.0001
G2 <- 0.0001
P = matrix(runif(N*T0, min=0.0001, max=0.05), nrow = N, ncol = T0)
#P <- matrix(0.02, nrow = N, ncol = T0)
for (n in 1:N){
P[n,] <- P[n,]/sum(P[n,])
}
Plog <- log(P)
maxit <- 1000
t0 <- Sys.time()
Results <- CVI_sigma(N, D, T0, s1, s2, L20, b1, b2, X, W1, W2, L1,
L2, G1, G2, Plog, maxit)
t1 <- Sys.time()
t[k] <- t1 - t0
alpha0[k] <- Results$posterior$alpha
cl[k] <- Results$posterior$Clusters
c1[[k]] <- Results$posterior$Proportions
sig[k] <- Results$posterior$sigma^2
}
alpha0
alpha0*log(1+N0/alpha0)
sig
